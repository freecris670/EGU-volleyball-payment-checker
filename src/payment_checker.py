from datetime import datetime
import re

class PaymentChecker:
    def __init__(self):
        self.payments = {}

class EventParser:
    def __init__(self):
        self.weekday_map = {
            'Monday': '–ø–Ω',
            'Tuesday': '–≤—Ç',
            'Wednesday': '—Å—Ä',
            'Thursday': '—á—Ç',
            'Friday': '–ø—Ç',
            'Saturday': '—Å–±',
            'Sunday': '–≤—Å'
        }

    def parse_event_text(self, text):
        """–ü–∞—Ä—Å–∏–Ω–≥ —Ç–µ–∫—Å—Ç–∞ —Å–æ–±—ã—Ç–∏—è –∏ –ø–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤"""
        participants = []
        current_date = None
        current_weekday = None
        current_time = None
        current_year = 2025  # –ó–∞–¥–∞–µ–º –≥–æ–¥ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –∏–∑ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
        
        lines = text.split('\n')
        for line in lines:
            # –ò—â–µ–º –≤—Ä–µ–º—è –ø—Ä–æ–≤–µ–¥–µ–Ω–∏—è –∏–≥—Ä—ã
            time_match = re.search(r'üïô–í—Ä–µ–º—è:\s*(\d+[:\.]\d+)\s*–¥–æ\s*(\d+[:\.]\d+)', line)
            if time_match:
                start_time = time_match.group(1).replace('.', ':')
                end_time = time_match.group(2).replace('.', ':')
                current_time = f"{start_time}-{end_time}"
                continue
                
            # –ò—â–µ–º –¥–∞—Ç—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ YYYY-MM-DD
            date_match = re.search(r'(\d{4}-\d{2}-\d{2})', line)
            if date_match:
                date_str = date_match.group(1)
                date_obj = datetime.strptime(date_str, '%Y-%m-%d')
                current_date = date_obj.strftime('%d.%m')
                current_weekday = self.weekday_map[date_obj.strftime('%A')]
                continue
            
            # –ò—â–µ–º –¥–∞—Ç—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ DD.MM (–Ω–æ–≤—ã–π —Ñ–æ—Ä–º–∞—Ç)
            short_date_match = re.search(r'‚îå\s*(\d{2}\.\d{2})\s*\((\w+)\)', line)
            if short_date_match:
                date_str = short_date_match.group(1)
                weekday_eng = short_date_match.group(2)
                current_date = date_str
                # –ï—Å–ª–∏ –µ—Å—Ç—å –¥–µ–Ω—å –Ω–µ–¥–µ–ª–∏ –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º, –ø—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –µ–≥–æ
                if weekday_eng in self.weekday_map:
                    current_weekday = self.weekday_map[weekday_eng]
                # –ï—Å–ª–∏ –¥–µ–Ω—å –Ω–µ–¥–µ–ª–∏ –Ω–µ —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω, –ø—ã—Ç–∞–µ–º—Å—è –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –µ–≥–æ —á–µ—Ä–µ–∑ –¥–∞—Ç—É
                else:
                    try:
                        # –î–æ–±–∞–≤–ª—è–µ–º –≥–æ–¥ –∫ –∫–æ—Ä–æ—Ç–∫–æ–π –¥–∞—Ç–µ –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –¥–Ω—è –Ω–µ–¥–µ–ª–∏
                        full_date = f"{current_year}-{date_str.split('.')[1]}-{date_str.split('.')[0]}"
                        date_obj = datetime.strptime(full_date, '%Y-%m-%d')
                        current_weekday = self.weekday_map[date_obj.strftime('%A')]
                    except:
                        # –í —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏ –ø–∞—Ä—Å–∏–Ω–≥–∞ –∏—Å–ø–æ–ª—å–∑—É–µ–º —á–µ—Ç–≤–µ—Ä–≥ (–∫–∞–∫ –≤ –ø—Ä–∏–º–µ—Ä–µ)
                        current_weekday = '—á—Ç'
                continue
                
            # –ò—â–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∏–≥—Ä–µ –≤–æ –≤—Ç–æ—Ä–æ–π —Å—Ç—Ä–æ–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è
            game_info_match = re.search(r'‚úâÔ∏è\s+–ò–≥—Ä–∞\s+(\d{2}\.\d{2})\s+\((\w+)\)', line)
            if game_info_match:
                date_str = game_info_match.group(1)
                weekday_rus = game_info_match.group(2)
                current_date = date_str
                
                # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º —Ä—É—Å—Å–∫–∏–π –¥–µ–Ω—å –Ω–µ–¥–µ–ª–∏ –≤ —Å–æ–∫—Ä–∞—â–µ–Ω–Ω—É—é —Ñ–æ—Ä–º—É
                weekday_map_rus = {
                    '–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫': '–ø–Ω', 
                    '–í—Ç–æ—Ä–Ω–∏–∫': '–≤—Ç', 
                    '–°—Ä–µ–¥–∞': '—Å—Ä', 
                    '–ß–µ—Ç–≤–µ—Ä–≥': '—á—Ç', 
                    '–ü—è—Ç–Ω–∏—Ü–∞': '–ø—Ç', 
                    '–°—É–±–±–æ—Ç–∞': '—Å–±', 
                    '–í–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ': '–≤—Å'
                }
                current_weekday = weekday_map_rus.get(weekday_rus, weekday_rus[:2].lower())
                continue

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ —Ñ–æ—Ä–º–∞—Ç —Å —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–π –ø–æ–º–µ—Ç–∫–æ–π [N]
            existing_vote_match = re.search(r'[‚îú‚îî]?\s*\d+\.\s*([^\[]+)\s*\[(\d+)\]', line)
            if existing_vote_match and current_date and current_weekday:
                name = existing_vote_match.group(1).strip()
                votes = int(existing_vote_match.group(2))
                # –î–æ–±–∞–≤–ª—è–µ–º –∏–≥—Ä–æ–∫–∞ —Å –µ–≥–æ –ø–æ–º–µ—Ç–∫–æ–π [N]
                participant_str = f"{current_weekday} {current_date} | {current_time} | {name} [{votes}]"
                participants.append(participant_str)
                continue

            # –ò—â–µ–º —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –≤ —Ñ–æ—Ä–º–∞—Ç–µ —Å votes
            vote_match = re.search(r'[‚îú‚îî]?\s*(?:[\d.]+\s*)?([^(]+)\((\d+)\s*votes\)', line)
            if vote_match and current_date and current_weekday:
                name = vote_match.group(1).strip()
                votes = int(vote_match.group(2))
                # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–º–µ—Ç–∫—É –æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–µ –≥–æ–ª–æ—Å–æ–≤, –µ—Å–ª–∏ –±–æ–ª—å—à–µ 1
                if votes > 1:
                    name_with_votes = f"{name} [{votes}]"
                else:
                    name_with_votes = name
                participant_str = f"{current_weekday} {current_date} | {current_time} | {name_with_votes}"
                participants.append(participant_str)
                continue

            # –ò—â–µ–º —Ñ–æ—Ä–º–∞—Ç —Å total votes (–Ω–æ–≤—ã–π —Ñ–æ—Ä–º–∞—Ç)
            total_votes_match = re.search(r'[‚îú‚îî]?\s*\d+\.\s*([^(]+)\((\d+)\s*votes\s*total\)', line)
            if total_votes_match and current_date and current_weekday:
                name = total_votes_match.group(1).strip()
                votes = int(total_votes_match.group(2))
                # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–º–µ—Ç–∫—É –æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–µ –≥–æ–ª–æ—Å–æ–≤, –µ—Å–ª–∏ –±–æ–ª—å—à–µ 1
                if votes > 1:
                    name_with_votes = f"{name} [{votes}]"
                else:
                    name_with_votes = name
                participant_str = f"{current_weekday} {current_date} | {current_time} | {name_with_votes}"
                participants.append(participant_str)
                continue

            # –ò—â–µ–º —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –≤ —Ñ–æ—Ä–º–∞—Ç–µ —Å –Ω–æ–º–µ—Ä–æ–º
            numbered_match = re.search(r'[‚îú‚îî]\s*\d+\.\s*([^‚îî‚îú\n]+)', line)
            if numbered_match and current_date and current_weekday:
                name = numbered_match.group(1).strip()
                # –ï—Å–ª–∏ —ç—Ç–æ –Ω–µ –ø–æ–ø–∞–ª–æ –≤ –ø—Ä–µ–¥—ã–¥—É—â–∏–µ —à–∞–±–ª–æ–Ω—ã –∏ –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç [N]
                if not re.search(r'\[\d+\]$', name):
                    participant_str = f"{current_weekday} {current_date} | {current_time} | {name}"
                    participants.append(participant_str)
                continue

        return participants